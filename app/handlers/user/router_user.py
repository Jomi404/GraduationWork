from aiogram import Router
from aiogram.enums import ContentType
from aiogram.filters import Command
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from aiogram_dialog import Dialog, DialogManager, Window
from aiogram_dialog.widgets.kbd import Button, Column
from aiogram_dialog.widgets.media import StaticMedia
from aiogram_dialog.widgets.text import Const
from pydantic import ValidationError

from app.core.database import connection
from app.handlers import BaseHandler
from app.handlers.schemas import TelegramIDModel
from app.handlers.user.dao import AgreePolicyDAO
from app.handlers.user.schemas import AgreePolicyModel
from app.handlers.user.utils import AgreePolicyFilter, get_active_policy_url


class MainDialogStates(StatesGroup):
    main = State()
    action_menu = State()


async def on_start_click(callback: CallbackQuery, button: Button, dialog_manager: DialogManager) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ '–ù–∞—á–∞—Ç—å'."""
    logger = dialog_manager.middleware_data.get("logger")
    if logger:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {dialog_manager.event.from_user.id} –Ω–∞–∂–∞–ª '–ù–∞—á–∞—Ç—å'")
    await dialog_manager.switch_to(MainDialogStates.action_menu)


async def on_rent_click(callback: CallbackQuery, button: Button, dialog_manager: DialogManager) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ '–ê—Ä–µ–Ω–¥–∞'."""
    logger = dialog_manager.middleware_data.get("logger")
    if logger:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {dialog_manager.event.from_user.id} –Ω–∞–∂–∞–ª '–ê—Ä–µ–Ω–¥–∞'")
    await callback.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ '–ê—Ä–µ–Ω–¥–∞'. –ß—Ç–æ –¥–∞–ª—å—à–µ? üöó")


async def on_cancel_rent_click(callback: CallbackQuery, button: Button, dialog_manager: DialogManager) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ '–û—Ç–º–µ–Ω–∞ –ê—Ä–µ–Ω–¥—ã'."""
    logger = dialog_manager.middleware_data.get("logger")
    if logger:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {dialog_manager.event.from_user.id} –Ω–∞–∂–∞–ª '–û—Ç–º–µ–Ω–∞ –ê—Ä–µ–Ω–¥—ã'")
    await callback.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ '–û—Ç–º–µ–Ω–∞ –ê—Ä–µ–Ω–¥—ã'. –£–∫–∞–∂–∏—Ç–µ –¥–µ—Ç–∞–ª–∏ –æ—Ç–º–µ–Ω—ã. üö´")


async def on_payment_click(callback: CallbackQuery, button: Button, dialog_manager: DialogManager) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ '–°—á–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É'."""
    logger = dialog_manager.middleware_data.get("logger")
    if logger:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {dialog_manager.event.from_user.id} –Ω–∞–∂–∞–ª '–°—á–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É'")
    await callback.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ '–°—á–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É'. –í–æ—Ç –≤–∞—à–∏ —Å—á–µ—Ç–∞... üí∏")


async def on_more_click(callback: CallbackQuery, button: Button, dialog_manager: DialogManager) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ'."""
    logger = dialog_manager.middleware_data.get("logger")
    if logger:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {dialog_manager.event.from_user.id} –Ω–∞–∂–∞–ª '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ'")
    await callback.message.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ'. –£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è. üí∞")


async def on_exit_click(callback: CallbackQuery, button: Button, dialog_manager: DialogManager) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ '–í—ã—Ö–æ–¥'."""
    logger = dialog_manager.middleware_data.get("logger")
    user_id = callback.from_user.id
    if logger:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã—à–µ–ª –∏–∑ –º–µ–Ω—é")
    await callback.message.answer("–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ.")
    await dialog_manager.done()  # Close the dialog to reset state


def main_dialog() -> Dialog:
    """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –¥–∏–∞–ª–æ–≥ —Å –æ–∫–Ω–∞–º–∏."""
    return Dialog(
        Window(
            Const("–ü—Ä–∏–≤–µ—Ç! üëã –Ø —Ç–≤–æ–π —á–∞—Ç-–±–æ—Ç. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"),
            Button(
                Const("–ù–∞—á–∞—Ç—å"),
                id="start",
                on_click=on_start_click
            ),
            state=MainDialogStates.main,
        ),
        Window(
            Const("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
            StaticMedia(
                url="https://iimg.su/i/7vTQV5",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                type=ContentType.PHOTO
            ),
            Const("–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:"
                  ),
            Column(
                Button(Const("–ê—Ä–µ–Ω–¥–∞"), id="rent", on_click=on_rent_click),
                Button(Const("–û—Ç–º–µ–Ω–∞ –ê—Ä–µ–Ω–¥—ã"), id="cancel_rent", on_click=on_cancel_rent_click),
                Button(Const("–°—á–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É"), id="payment", on_click=on_payment_click),
                Button(Const("–ü–æ–¥—Ä–æ–±–Ω–µ–µ"), id="more", on_click=on_more_click),
                Button(Const("–í—ã–π—Ç–∏"), id="exit", on_click=on_exit_click)
            ),

            state=MainDialogStates.action_menu,
        )
    )


@connection()
async def on_agree_policy_click(callback: CallbackQuery, dialog_manager: DialogManager, session) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ '–°–æ–≥–ª–∞—Å–µ–Ω'."""
    user = callback.from_user
    logger = dialog_manager.middleware_data.get("logger")
    if logger:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} ({user.first_name}) —Å–æ–≥–ª–∞—Å–∏–ª—Å—è —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏")

    try:
        policy_dao = AgreePolicyDAO(session)
        existing_policy = await policy_dao.find_one_or_none(TelegramIDModel(telegram_id=user.id))
        if existing_policy:
            await callback.message.answer("–í—ã —É–∂–µ —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.")
            await callback.answer()
            return
        await policy_dao.add(AgreePolicyModel(
            telegram_id=user.id,
            name=user.first_name,
        ))
        await session.commit()
        await callback.message.answer("–°–ø–∞—Å–∏–±–æ, –≤—ã —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏! "
                                      "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!")
    except ValidationError as e:
        if logger:
            logger.error(f"–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ AgreePolicyModel –¥–ª—è tg_id={user.id}: {str(e)}", exc_info=True)
        await callback.message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–≥–ª–∞—Å–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception as e:
        if logger:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–æ–≥–ª–∞—Å–∏—è –¥–ª—è tg_id={user.id}: {str(e)}", exc_info=True)
        await callback.message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–≥–ª–∞—Å–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    await callback.answer()


class UserHandler(BaseHandler):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""

    def __init__(self, dp: Router):
        self.dialog = main_dialog()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥ –¥–æ super().__init__
        super().__init__(dp)

    def register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –¥–∏–∞–ª–æ–≥
        self.dp.include_router(self.dialog)
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–æ–≥–ª–∞—Å–Ω—ã—Ö —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π
        self.dp.message(Command(commands=["start", "menu", "–º–µ–Ω—é", "–Ω–∞—á–∞—Ç—å", "main"]),
                        AgreePolicyFilter())(self.start_command)
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã—Ö —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π
        self.dp.message(~AgreePolicyFilter())(self.on_no_policy_agreement)
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–æ–≥–ª–∞—Å–µ–Ω"
        self.dp.callback_query(lambda c: c.data == "agree_policy")(on_agree_policy_click)

    async def start_command(self, message: Message, dialog_manager: DialogManager) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–æ–≥–ª–∞—Å–Ω—ã—Ö —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π."""
        user = message.from_user
        self.logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} ({user.first_name}) –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–∞–Ω–¥—É /start")
        dialog_manager.middleware_data["logger"] = self.logger
        await dialog_manager.start(state=MainDialogStates.action_menu)

    @connection()
    async def on_no_policy_agreement(self, message: Message, session) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã—Ö —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏."""
        user = message.from_user
        self.logger.info(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} ({user.first_name}) –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Å–æ–≥–ª–∞—Å–∏—è —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π")
        # –ü–æ–ª—É—á–∞–µ–º URL –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏
        policy_url = await get_active_policy_url(session)
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–°–æ–≥–ª–∞—Å–µ–Ω" –∏ WebApp
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–°–æ–≥–ª–∞—Å–µ–Ω ‚úÖ", callback_data="agree_policy")],
            [InlineKeyboardButton(
                text="–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ üìÑ",
                web_app=WebAppInfo(url=policy_url)
            )]
        ])
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∏
        await message.answer(
            text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å –∏ —Å–æ–≥–ª–∞—Å–∏—Ç–µ—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏. "
                 "–¢–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞ —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω.",
            reply_markup=keyboard
        )
